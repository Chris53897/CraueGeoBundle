# .github/workflows/ci.yaml
name: CI

on: ["push", "pull_request"]

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: ['8.2']
        stability: [ prefer-stable ]
        symfony-version: ['6.3.*']
        include:
          - php: '8.1'
            symfony-version: 5.4.*
            stability: prefer-lowest
          - php: '8.1'
            symfony-version: 5.4.*
            stability: prefer-stable
          - php: '8.1'
            symfony-version: 6.3.*
            stability: prefer-stable
          - php: '8.2'
            symfony-version: 6.3.*
            stability: prefer-stable

    # Docker Hub image that `postgres-job` executes in
    container: node:latest

    # service containers to run with `postgres-job`
    services:
      # label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:latest
        # service environment variables
        env:
          POSTGRES_HOST: 'localhost'
          POSTGRES_DB: test
          POSTGRES_PASSWORD: root
          POSTGRES_PORT: 5432
          POSTGRES_USER: root
        ports:
          - 5432:5432
        # set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DB_DATABASE: test
      DB_USER: root
      DB_PASSWORD: root

    name: PHP ${{ matrix.php }} - ${{ matrix.symfony-version }} - ${{ matrix.stability }}
    steps:
      - name: Set up MySQL
        run: |
          #sudo systemctl start mysql
          sudo /etc/init.d/mysql start
          mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

      # basically git clone
      - uses: actions/checkout@v3

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache/files
          key: dependencies-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

      # use PHP of specific version
      - uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: pcov, pdo, pdo_mysql, pdo_pgsql
          coverage: pcov

      - name: Install dependencies
        env:
          SYMFONY_REQUIRE: ${{ matrix.symfony-version }}
        run: |
          composer update --no-interaction --prefer-dist

      - name: Execute tests
        env:
          SYMFONY_DEPRECATIONS_HELPER: 'weak'
        run: vendor/bin/phpunit
